'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.replace(/\s*$/, '')
        .split('\n')
        .map(str => str.replace(/\s*$/, ''));

    main();
});

function readLine() {
    return inputString[currentLine++];
}

function jumpingOnClouds(c) {
    let count = 0;
    let i = 0;

    while (true) { //while loop applies b/c we're incrementing by 1 or 2, and it's
                    //easier to achieve our goal.
        if (i + 2 < c.length && c[i + 2] == 0) { //checks if we're in a safe spot.
            i += 2; //increment by 2 to hop to next safe spot.
        } else if (i + 1 < c.length) { //check if spots are remaining.
            i++; //increment through if so.
        } else {
            break; //breaks when if/else statements aren't met.
        }
        count++; //increment the while loop, to iterate through array.
    }
    return count; //return count when while loop ends.
}
//algorithm's time/space efficiency is 0(N).
function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const n = parseInt(readLine(), 10);

    const c = readLine().split(' ').map(cTemp => parseInt(cTemp, 10));

    let result = jumpingOnClouds(c);

    ws.write(result + "\n");

    ws.end();
}
